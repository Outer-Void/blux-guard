[build-system]
requires = ["setuptools>=77.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "blux-guard"
version = "1.0.0"
description = "Terminal TUI Dev Security / BLUX Ecosystem Cockpit"
readme = "README.md"
authors = [{ name = "Outer Void Team" }]
license = { text = "Apache-2.0" }
requires-python = ">=3.9"
keywords = ["security", "tui", "textual", "blux", "guard", "cli", "quantum"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Topic :: Security",
]
dependencies = [
    "argon2-cffi",
    "cryptography",
    "textual>=0.62.0",
    "textual-dev",
    "rich>=13.7.0",
    "pysqlite3",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
    "typer>=0.12.3",
    "psutil>=5.9.8",
    "sqlite-utils>=3.36",
    "prometheus-client>=0.20.0",
    "pydantic>=2.7.0",
    "pyyaml>=6.0.1",
]

[project.optional-dependencies]
dev = ["ruff", "mypy", "pytest"]

<<<<<<< HEAD
=======
    "rich",
    "pysqlite3",
    "fastapi",
    "uvicorn"
]

>>>>>>> main
[project.scripts]
bluxq = "blux_guard.cli.bluxq:app"
bluxqd = "blux_guard.api.guardd:start"

[tool.setuptools.packages.find]
where = ["."]
include = ["blux_modules*", "blux_guard*"]  # Include legacy and new developer suite modules

[tool.setuptools.package-data]
blux_modules = ["*"]
